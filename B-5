A book consists of chapters, chapters consist of sections and sections consist of subsections.
Construct a tree and print the nodes. Find the time and space requirements of your method.

#include<iostream.h>
using namespace std;
struct Node
{
 char name[20];
 struct Node *link1;
 struct Node *link2;
 struct Node *link3;
} *Root, *Ch;


void create_Tree()
{
 struct Node *temp;
 temp = new struct Node;
 cout << "\n\n Enter the book name: ";
 cin >> temp->name;
 temp->link1 = NULL;
 temp->link2 = NULL;
 temp->link3 = NULL;
 if (Root == NULL)
 Root = temp;
}


void display()
{
 if (Root)
 cout << "\n\n Book name: " << Root->name;
 Ch = Root->link1;
 if (Ch)
 {
 cout << "\n\n Chapter 1: " << Ch->name;
 if (Ch->link1)
 cout << "\n\n Section 1:" << Ch->link1->name;
 if (Ch->link2)
 cout << "\n\n Section 2:" << Ch->link2->name;
 if (Ch->link3)
 cout << "\n\n Section 3:" << Ch->link3->name;
 }
 Ch = Root->link2;
 if (Ch)
 {
 cout << "\n\n Chapter 2: " << Ch->name;
 if (Ch->link1)
 cout << "\n\n Section 1:" << Ch->link1->name;
 if (Ch->link2)
 cout << "\n\n Section 2:" << Ch->link2->name;
 if (Ch->link3)
 cout << "\n\n Section 3:" << Ch->link3->name;
 }
 Ch = Root->link3;
 if (Ch)
 {
 cout << "\n\n Chapter 3: " << Ch->name;
 if (Ch->link1)
 cout << "\n\n Section 1:" << Ch->link1->name;
 if (Ch->link2)
 cout << "\n\n Section 2:" << Ch->link2->name;
 if (Ch->link3)
 cout << "\n\n Section 3:" << Ch->link3->name;
 }
}


void insert_Chapter()
{
 struct Node *temp;
 temp = new struct Node;
 cout << "\n\n Enter the chapter name: ";
 cin >> temp->name;
 temp->link1 = NULL;
 temp->link2 = NULL;
 temp->link3 = NULL;
 if (Root->link1 == NULL)
 Root->link1 = temp;
 else if (Root->link2 == NULL)
 Root->link2 = temp;
 else if (Root->link3 == NULL)
 Root->link3 = temp;
 else
 cout << "\n Can't add more chapters";
}


void insert_Sec()
{
 struct Node *temp;
 temp = new struct Node;
 cout << "\n\n Enter the section name: ";
 cin >> temp->name;
 temp->link1 = NULL;
 temp->link2 = NULL;
 temp->link3 = NULL;
 if (Ch->link1 == NULL)
 Ch->link1 = temp;
 else if (Ch->link2 == NULL)
 Ch->link2 = temp;
 else if (Ch->link3 == NULL)
 Ch->link3 = temp;
 else
 cout << "\n\n Can't add more sections: ";
}


void insert_Section()
{
 int chap;
 cout << "\n\n Enter the chapters (1/2/3): ";
 cin >> chap;
 switch (chap)
 {
 case 1:
 Ch = Root->link1;
 insert_Sec();
 insert_Sec();
 break;
 case 2:
 Ch = Root->link2;
 insert_Sec();
 insert_Sec();
 break;
 case 3:
 Ch = Root->link3;
 insert_Sec();
 insert_Sec();
 break;
 }
}


int main()
{
 cout << "\n # # # # # # # # # # # PRACTICAL NO. :- 03 (B_5) # # # # # # # # # # # ";
 cout << "\n A Program To Implement General Tree";
 Root = NULL;
 create_Tree();
 insert_Chapter();
 insert_Chapter();
 insert_Chapter();
 insert_Section();
 insert_Section();
 insert_Section();
 display();
 return 0;
}
